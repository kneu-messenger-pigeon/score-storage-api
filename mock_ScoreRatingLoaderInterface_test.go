// Code generated by mockery v2.14.1. DO NOT EDIT.

package main

import (
	scoreApi "github.com/kneu-messenger-pigeon/score-api"
	mock "github.com/stretchr/testify/mock"
)

// MockScoreRatingLoaderInterface is an autogenerated mock type for the ScoreRatingLoaderInterface type
type MockScoreRatingLoaderInterface struct {
	mock.Mock
}

// load provides a mock function with given fields: year, semester, disciplineId, studentId
func (_m *MockScoreRatingLoaderInterface) load(year int, semester int, disciplineId int, studentId int) scoreApi.ScoreRating {
	ret := _m.Called(year, semester, disciplineId, studentId)

	var r0 scoreApi.ScoreRating
	if rf, ok := ret.Get(0).(func(int, int, int, int) scoreApi.ScoreRating); ok {
		r0 = rf(year, semester, disciplineId, studentId)
	} else {
		r0 = ret.Get(0).(scoreApi.ScoreRating)
	}

	return r0
}

type mockConstructorTestingTNewMockScoreRatingLoaderInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockScoreRatingLoaderInterface creates a new instance of MockScoreRatingLoaderInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockScoreRatingLoaderInterface(t mockConstructorTestingTNewMockScoreRatingLoaderInterface) *MockScoreRatingLoaderInterface {
	mock := &MockScoreRatingLoaderInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
